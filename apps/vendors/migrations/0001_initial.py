# Generated by Django 3.2 on 2024-04-15 12:07

from django.conf import settings
import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import utils.fields
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        # migrations.CreateModel(
        #     name='VendorsubscriptionPlan',
        #     fields=[
        #         ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
        #         ('created_at', models.DateTimeField(default=django.utils.timezone.localtime)),
        #         ('updated_at', models.DateTimeField(blank=True, null=True)),
        #         ('name', models.CharField(max_length=60, unique=True)),
        #         ('price', models.FloatField()),
        #     ],
        #     options={
        #         'ordering': ['price'],
        #         'managed': False,
        #     },
        # ),
        migrations.CreateModel(
            name='Vendor',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.localtime)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('store_name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('store_cover', models.ImageField(blank=True, null=True, upload_to='store/image')),
                ('location', models.CharField(blank=True, max_length=255, null=True)),
                ('store_locations', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=100, null=True), blank=True, null=True, size=None)),
                ('phone', models.CharField(blank=True, max_length=255, null=True)),
                ('email', models.CharField(blank=True, max_length=255, null=True)),
                ('video_url', models.URLField(blank=True, max_length=255, null=True)),
                ('domain', models.URLField(blank=True, null=True)),
                ('country', models.CharField(blank=True, max_length=50, null=True)),
                ('region', models.CharField(blank=True, max_length=50, null=True)),
                ('sub_city', models.CharField(blank=True, max_length=50, null=True)),
                ('woreda', models.CharField(blank=True, max_length=50, null=True)),
                ('kebele', models.CharField(blank=True, max_length=50, null=True)),
                ('trade_licence', models.ImageField(blank=True, null=True, upload_to='vendor_licence')),
                ('trade_name', models.CharField(blank=True, max_length=255, null=True)),
                ('tin_number', models.CharField(blank=True, max_length=100, null=True)),
                ('is_supplier', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('is_verified', models.BooleanField(default=False)),
                ('reference_code', models.CharField(blank=True, max_length=50, null=True)),
                ('source_link', models.CharField(blank=True, max_length=50, null=True)),
                ('support_phone', models.CharField(blank=True, max_length=255, null=True)),
                ('support_email', models.CharField(blank=True, max_length=255, null=True)),
                ('banner', models.ImageField(blank=True, null=True, upload_to='banner/image')),
                ('logo', models.ImageField(blank=True, null=True, upload_to='logo/image')),
                ('template_type', models.IntegerField(default=1)),
                ('store_type', models.CharField(blank=True, choices=[('retailer', 'Retailer'), ('wholesaler', 'Wholesaler'), ('supplier', 'Supplier'), ('manufacturer', 'Manufacturer'), ('distributor', 'Distributor'), ('big', 'Big'), ('small', 'Small'), ('medium', 'Medium')], max_length=160, null=True)),
                ('catagories', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=100, null=True), blank=True, null=True, size=None)),
                ('support_phone_call', models.CharField(blank=True, max_length=25, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='vendor_created_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='vendor_updated_by', to=settings.AUTH_USER_MODEL)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, related_name='vendor', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
                'abstract': False,
            },
        ),
        # migrations.CreateModel(
        #     name='VendorsubscriptionPlanList',
        #     fields=[
        #         ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
        #         ('created_at', models.DateTimeField(default=django.utils.timezone.localtime)),
        #         ('updated_at', models.DateTimeField(blank=True, null=True)),
        #         ('name', models.CharField(max_length=800, unique=True)),
        #         ('key_name', models.SlugField(max_length=900, unique=True)),
        #         ('order', utils.fields.OrderField(default=0)),
        #     ],
        #     options={
        #         'ordering': ['-order'],
        #     },
        # ),
        migrations.CreateModel(
            name='VerificationRequest',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.localtime)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('accepted', 'Accepted'), ('declined', 'Declined')], default='pending', max_length=60)),
                ('vendor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vendors.vendor')),
            ],
            options={
                'ordering': ['-created_at'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='VendorVisitorNumber',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.localtime)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('count', models.IntegerField(default=0)),
                ('vendor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vendors.vendor')),
            ],
            options={
                'ordering': ['-created_at'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Vendorsubscription',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.localtime)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('paid', models.BooleanField(default=False)),
                ('month', models.PositiveIntegerField(default=1)),
                # ('subscription_plan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subscription_plan', to='vendors.vendorsubscriptionplan')),
                # ('upgrade_subscription_plan', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='upgrade_subscription_plan', to='vendors.vendorsubscriptionplan')),
                ('vendor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vendors.vendor')),
            ],
            options={
                'ordering': ['-created_at'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='VendorRegistration',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.localtime)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('registered_on', models.DateTimeField(default=django.utils.timezone.localtime)),
                ('expires_on', models.DateTimeField()),
                ('vendor', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='registration', to='vendors.vendor')),
            ],
            options={
                'ordering': ['-created_at'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='VendorPromotionSubscription',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('phone_number', models.CharField(max_length=20)),
                ('status', models.CharField(choices=[('APPROVED', 'APPROVED'), ('CANCELED', 'CANCELED')], default='PENDING', max_length=60)),
                ('active_until', models.IntegerField(blank=True, null=True)),
                ('approved_on', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='promotion_approved_by', to=settings.AUTH_USER_MODEL)),
                ('vendor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vendors.vendor')),
            ],
            options={
                'ordering': ['-created_at'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='VendorPromotion',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.localtime)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('end_date', models.DateField()),
                ('phone_number', models.CharField(max_length=15)),
                ('vendor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vendors.vendor')),
            ],
            options={
                'ordering': ['-created_at'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='VendorInvitation',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.localtime)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('email', models.EmailField(max_length=254)),
                ('name', models.CharField(max_length=100)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='vendor_invi_created_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='vendor_invi_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='VendorGallery',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.localtime)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('image', models.ImageField(upload_to='vendor/gallery')),
                ('img_desc', models.TextField(blank=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='vendor_gallary_created_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='vendor_gallary_updated_by', to=settings.AUTH_USER_MODEL)),
                ('vendor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vendors.vendor')),
            ],
            options={
                'ordering': ['-created_at'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='VendorFooter',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.localtime)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('our_service', models.JSONField(default=dict)),
                ('trade_service', models.JSONField(default=dict)),
                ('our_products', models.JSONField(default=dict)),
                ('who_we_are', models.JSONField(default=dict)),
                ('vendor', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='vendors.vendor')),
            ],
            options={
                'ordering': ['-created_at'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='VendorDocument',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.localtime)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('image', models.ImageField(upload_to='vendor/document')),
                ('title', models.TextField()),
                ('description', models.TextField(blank=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='vendor_document_created_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='vendor_document_updated_by', to=settings.AUTH_USER_MODEL)),
                ('vendor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vendors.vendor')),
            ],
            options={
                'ordering': ['-created_at'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='VendorBank',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.localtime)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('bank_name', models.CharField(blank=True, max_length=100, null=True)),
                ('account_name', models.CharField(max_length=100)),
                ('account_number', models.CharField(max_length=100)),
                ('account_type', models.CharField(blank=True, max_length=100, null=True)),
                ('bank_branch', models.CharField(blank=True, max_length=200, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='vendor_bank_created_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='vendor_bank_updated_by', to=settings.AUTH_USER_MODEL)),
                ('vendor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vendors.vendor')),
            ],
            options={
                'ordering': ['-created_at'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='VendorBalanceWithdrawRequest',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('balance', models.DecimalField(decimal_places=2, max_digits=10)),
                ('status', models.CharField(choices=[('PENDING', 'PENDING'), ('APPROVED', 'APPROVED'), ('CANCELED', 'CANCELED'), ('CASHED_OUT', 'CASHED_OUT')], default='PENDING', max_length=60)),
                ('approved_on', models.DateTimeField(blank=True, null=True)),
                ('cashed_out_on', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='request_approved_by', to=settings.AUTH_USER_MODEL)),
                ('cashed_out_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='request_cashed_out', to=settings.AUTH_USER_MODEL)),
                ('vendor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vendors.vendor')),
            ],
            options={
                'ordering': ['-created_at'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='VendorBalanceLog',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.localtime)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('balance_type', models.CharField(choices=[('DEPOSIT', 'DEPOSIT'), ('WITHDRAW', 'WITHDRAW'), ('FREE_DELIVERY', 'FREE_DELIVERY')], max_length=60)),
                ('balance', models.DecimalField(decimal_places=2, max_digits=10)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='vendor_review_updated_by', to=settings.AUTH_USER_MODEL)),
                ('vendor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vendors.vendor')),
            ],
            options={
                'ordering': ['-created_at'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='VendorAwards',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.localtime)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('image', models.ImageField(upload_to='vendor/awards')),
                ('title', models.TextField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='vendor_award_created_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='vendor_award_updated_by', to=settings.AUTH_USER_MODEL)),
                ('vendor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vendors.vendor')),
            ],
            options={
                'ordering': ['-created_at'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SocialLink',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.localtime)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('facebook', models.URLField(blank=True, null=True)),
                ('telegram', models.URLField(blank=True, null=True)),
                ('youtube', models.URLField(blank=True, null=True)),
                ('tiktok', models.URLField(blank=True, null=True)),
                ('website_url', models.URLField(blank=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='social_created_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='social_updated_by', to=settings.AUTH_USER_MODEL)),
                ('vendor', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='social_links', to='vendors.vendor')),
            ],
            options={
                'ordering': ['-created_at'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Promotions',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.localtime)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='promotions')),
                ('size', models.CharField(max_length=255)),
                ('label', models.CharField(max_length=255)),
                ('vendor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vendors.vendor')),
            ],
            options={
                'ordering': ['-created_at'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.localtime)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('title', models.CharField(max_length=255)),
                ('type_of_post', models.TextField(blank=True, null=True)),
                ('content', models.TextField()),
                ('image', models.ImageField(blank=True, null=True, upload_to='blog-post-img/')),
                ('video', models.FileField(blank=True, null=True, upload_to='blog-post-vid/')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Footer',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.localtime)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('our_courses', models.JSONField(default=dict)),
                ('about', models.JSONField(default=dict)),
                ('our_ecommerce', models.JSONField(default=dict)),
                ('make_money', models.JSONField(default=dict)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='footer_created_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='footer_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BloggerMenu',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.localtime)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('title', models.CharField(max_length=50, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('blogger', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
                'abstract': False,
            },
        ),
        # migrations.CreateModel(
        #     name='VendorsubscriptionPlanValue',
        #     fields=[
        #         ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
        #         ('created_at', models.DateTimeField(default=django.utils.timezone.localtime)),
        #         ('updated_at', models.DateTimeField(blank=True, null=True)),
        #         ('value', models.JSONField(default=dict)),
        #         ('value_name', models.CharField(max_length=500)),
        #         ('subscription_plan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subscription_plan_values', to='vendors.vendorsubscriptionplan')),
        #         ('subscription_plan_list', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subscription_plan_list_values', to='vendors.vendorsubscriptionplanlist')),
        #     ],
        #     options={
        #         'unique_together': {('value', 'subscription_plan', 'subscription_plan_list')},
        #     },
        # ),
        migrations.CreateModel(
            name='Follower',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.localtime)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='vendor_follower_created_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='vendor_follower_updated_by', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('vendor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vendors.vendor')),
            ],
            options={
                'unique_together': {('vendor', 'user')},
            },
        ),
    ]
